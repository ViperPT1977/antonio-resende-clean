{"ast":null,"code":"import * as React from 'react';\nimport { makeUseContext, useDocumentContext, useLayoutEffect, cleanup, useEventCallback, clsx, cssClass, createIcon, useLightboxProps, IconButton, addToolbarButton, createModule } from '../../index.js';\nimport { PLUGIN_FULLSCREEN, CLASS_FULLSIZE, PLUGIN_THUMBNAILS, MODULE_CONTROLLER } from '../../types.js';\nconst defaultFullscreenProps = {\n  auto: false,\n  ref: null\n};\nconst resolveFullscreenProps = fullscreen => ({\n  ...defaultFullscreenProps,\n  ...fullscreen\n});\nconst FullscreenContext = React.createContext(null);\nconst useFullscreen = makeUseContext(\"useFullscreen\", \"FullscreenContext\", FullscreenContext);\nfunction FullscreenContextProvider({\n  fullscreen: fullscreenProps,\n  on,\n  children\n}) {\n  const {\n    auto,\n    ref\n  } = resolveFullscreenProps(fullscreenProps);\n  const containerRef = React.useRef(null);\n  const [disabled, setDisabled] = React.useState();\n  const [fullscreen, setFullscreen] = React.useState(false);\n  const wasFullscreen = React.useRef(false);\n  const {\n    getOwnerDocument\n  } = useDocumentContext();\n  useLayoutEffect(() => {\n    var _a, _b, _c, _d;\n    const ownerDocument = getOwnerDocument();\n    setDisabled(!((_d = (_c = (_b = (_a = ownerDocument.fullscreenEnabled) !== null && _a !== void 0 ? _a : ownerDocument.webkitFullscreenEnabled) !== null && _b !== void 0 ? _b : ownerDocument.mozFullScreenEnabled) !== null && _c !== void 0 ? _c : ownerDocument.msFullscreenEnabled) !== null && _d !== void 0 ? _d : false));\n  }, [getOwnerDocument]);\n  const getFullscreenElement = React.useCallback(() => {\n    var _a;\n    const ownerDocument = getOwnerDocument();\n    const fullscreenElement = ownerDocument.fullscreenElement || ownerDocument.webkitFullscreenElement || ownerDocument.mozFullScreenElement || ownerDocument.msFullscreenElement;\n    return ((_a = fullscreenElement === null || fullscreenElement === void 0 ? void 0 : fullscreenElement.shadowRoot) === null || _a === void 0 ? void 0 : _a.fullscreenElement) || fullscreenElement;\n  }, [getOwnerDocument]);\n  const enter = React.useCallback(() => {\n    const container = containerRef.current;\n    try {\n      if (container.requestFullscreen) {\n        container.requestFullscreen().catch(() => {});\n      } else if (container.webkitRequestFullscreen) {\n        container.webkitRequestFullscreen();\n      } else if (container.mozRequestFullScreen) {\n        container.mozRequestFullScreen();\n      } else if (container.msRequestFullscreen) {\n        container.msRequestFullscreen();\n      }\n    } catch (_) {}\n  }, []);\n  const exit = React.useCallback(() => {\n    if (!getFullscreenElement()) return;\n    const ownerDocument = getOwnerDocument();\n    try {\n      if (ownerDocument.exitFullscreen) {\n        ownerDocument.exitFullscreen().catch(() => {});\n      } else if (ownerDocument.webkitExitFullscreen) {\n        ownerDocument.webkitExitFullscreen();\n      } else if (ownerDocument.mozCancelFullScreen) {\n        ownerDocument.mozCancelFullScreen();\n      } else if (ownerDocument.msExitFullscreen) {\n        ownerDocument.msExitFullscreen();\n      }\n    } catch (_) {}\n  }, [getFullscreenElement, getOwnerDocument]);\n  React.useEffect(() => {\n    const ownerDocument = getOwnerDocument();\n    const listener = () => {\n      setFullscreen(getFullscreenElement() === containerRef.current);\n    };\n    return cleanup(...[\"fullscreenchange\", \"webkitfullscreenchange\", \"mozfullscreenchange\", \"MSFullscreenChange\"].map(event => {\n      ownerDocument.addEventListener(event, listener);\n      return () => ownerDocument.removeEventListener(event, listener);\n    }));\n  }, [getFullscreenElement, getOwnerDocument]);\n  const onEnterFullscreen = useEventCallback(() => {\n    var _a;\n    return (_a = on.enterFullscreen) === null || _a === void 0 ? void 0 : _a.call(on);\n  });\n  const onExitFullscreen = useEventCallback(() => {\n    var _a;\n    return (_a = on.exitFullscreen) === null || _a === void 0 ? void 0 : _a.call(on);\n  });\n  React.useEffect(() => {\n    if (fullscreen) {\n      wasFullscreen.current = true;\n    }\n    if (wasFullscreen.current) {\n      (fullscreen ? onEnterFullscreen : onExitFullscreen)();\n    }\n  }, [fullscreen, onEnterFullscreen, onExitFullscreen]);\n  const handleAutoFullscreen = useEventCallback(() => {\n    var _a;\n    (_a = auto ? enter : null) === null || _a === void 0 ? void 0 : _a();\n    return exit;\n  });\n  React.useEffect(handleAutoFullscreen, [handleAutoFullscreen]);\n  const context = React.useMemo(() => ({\n    fullscreen,\n    disabled,\n    enter,\n    exit\n  }), [fullscreen, disabled, enter, exit]);\n  React.useImperativeHandle(ref, () => context, [context]);\n  return React.createElement(\"div\", {\n    ref: containerRef,\n    className: clsx(cssClass(PLUGIN_FULLSCREEN), cssClass(CLASS_FULLSIZE))\n  }, React.createElement(FullscreenContext.Provider, {\n    value: context\n  }, children));\n}\nconst EnterFullscreenIcon = createIcon(\"EnterFullscreen\", React.createElement(\"path\", {\n  d: \"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"\n}));\nconst ExitFullscreenIcon = createIcon(\"ExitFullscreen\", React.createElement(\"path\", {\n  d: \"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z\"\n}));\nfunction FullscreenButton() {\n  var _a;\n  const {\n    fullscreen,\n    disabled,\n    enter,\n    exit\n  } = useFullscreen();\n  const {\n    render\n  } = useLightboxProps();\n  if (disabled) return null;\n  if (render.buttonFullscreen) {\n    return React.createElement(React.Fragment, null, (_a = render.buttonFullscreen) === null || _a === void 0 ? void 0 : _a.call(render, {\n      fullscreen,\n      disabled,\n      enter,\n      exit\n    }));\n  }\n  return React.createElement(IconButton, {\n    disabled: disabled,\n    label: fullscreen ? \"Exit Fullscreen\" : \"Enter Fullscreen\",\n    icon: fullscreen ? ExitFullscreenIcon : EnterFullscreenIcon,\n    renderIcon: fullscreen ? render.iconExitFullscreen : render.iconEnterFullscreen,\n    onClick: fullscreen ? exit : enter\n  });\n}\nfunction Fullscreen({\n  augment,\n  contains,\n  addParent\n}) {\n  augment(({\n    fullscreen,\n    toolbar,\n    ...restProps\n  }) => ({\n    toolbar: addToolbarButton(toolbar, PLUGIN_FULLSCREEN, React.createElement(FullscreenButton, null)),\n    fullscreen: resolveFullscreenProps(fullscreen),\n    ...restProps\n  }));\n  addParent(contains(PLUGIN_THUMBNAILS) ? PLUGIN_THUMBNAILS : MODULE_CONTROLLER, createModule(PLUGIN_FULLSCREEN, FullscreenContextProvider));\n}\nexport { Fullscreen as default };","map":{"version":3,"names":["React","makeUseContext","useDocumentContext","useLayoutEffect","cleanup","useEventCallback","clsx","cssClass","createIcon","useLightboxProps","IconButton","addToolbarButton","createModule","PLUGIN_FULLSCREEN","CLASS_FULLSIZE","PLUGIN_THUMBNAILS","MODULE_CONTROLLER","defaultFullscreenProps","auto","ref","resolveFullscreenProps","fullscreen","FullscreenContext","createContext","useFullscreen","FullscreenContextProvider","fullscreenProps","on","children","containerRef","useRef","disabled","setDisabled","useState","setFullscreen","wasFullscreen","getOwnerDocument","_a","_b","_c","_d","ownerDocument","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","getFullscreenElement","useCallback","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","shadowRoot","enter","container","current","requestFullscreen","catch","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","_","exit","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","useEffect","listener","map","event","addEventListener","removeEventListener","onEnterFullscreen","enterFullscreen","call","onExitFullscreen","handleAutoFullscreen","context","useMemo","useImperativeHandle","createElement","className","Provider","value","EnterFullscreenIcon","d","ExitFullscreenIcon","FullscreenButton","render","buttonFullscreen","Fragment","label","icon","renderIcon","iconExitFullscreen","iconEnterFullscreen","onClick","Fullscreen","augment","contains","addParent","toolbar","restProps","default"],"sources":["C:/Users/laram/Documents/DOCUMENTOS EMPRESA E CONTABILIDADE/PORTFOLIO/viper_portfolio_fixed/node_modules/yet-another-react-lightbox/dist/plugins/fullscreen/index.js"],"sourcesContent":["import * as React from 'react';\nimport { makeUseContext, useDocumentContext, useLayoutEffect, cleanup, useEventCallback, clsx, cssClass, createIcon, useLightboxProps, IconButton, addToolbarButton, createModule } from '../../index.js';\nimport { PLUGIN_FULLSCREEN, CLASS_FULLSIZE, PLUGIN_THUMBNAILS, MODULE_CONTROLLER } from '../../types.js';\n\nconst defaultFullscreenProps = {\n    auto: false,\n    ref: null,\n};\nconst resolveFullscreenProps = (fullscreen) => ({\n    ...defaultFullscreenProps,\n    ...fullscreen,\n});\n\nconst FullscreenContext = React.createContext(null);\nconst useFullscreen = makeUseContext(\"useFullscreen\", \"FullscreenContext\", FullscreenContext);\nfunction FullscreenContextProvider({ fullscreen: fullscreenProps, on, children }) {\n    const { auto, ref } = resolveFullscreenProps(fullscreenProps);\n    const containerRef = React.useRef(null);\n    const [disabled, setDisabled] = React.useState();\n    const [fullscreen, setFullscreen] = React.useState(false);\n    const wasFullscreen = React.useRef(false);\n    const { getOwnerDocument } = useDocumentContext();\n    useLayoutEffect(() => {\n        var _a, _b, _c, _d;\n        const ownerDocument = getOwnerDocument();\n        setDisabled(!((_d = (_c = (_b = (_a = ownerDocument.fullscreenEnabled) !== null && _a !== void 0 ? _a : ownerDocument.webkitFullscreenEnabled) !== null && _b !== void 0 ? _b : ownerDocument.mozFullScreenEnabled) !== null && _c !== void 0 ? _c : ownerDocument.msFullscreenEnabled) !== null && _d !== void 0 ? _d : false));\n    }, [getOwnerDocument]);\n    const getFullscreenElement = React.useCallback(() => {\n        var _a;\n        const ownerDocument = getOwnerDocument();\n        const fullscreenElement = ownerDocument.fullscreenElement ||\n            ownerDocument.webkitFullscreenElement ||\n            ownerDocument.mozFullScreenElement ||\n            ownerDocument.msFullscreenElement;\n        return ((_a = fullscreenElement === null || fullscreenElement === void 0 ? void 0 : fullscreenElement.shadowRoot) === null || _a === void 0 ? void 0 : _a.fullscreenElement) || fullscreenElement;\n    }, [getOwnerDocument]);\n    const enter = React.useCallback(() => {\n        const container = containerRef.current;\n        try {\n            if (container.requestFullscreen) {\n                container.requestFullscreen().catch(() => { });\n            }\n            else if (container.webkitRequestFullscreen) {\n                container.webkitRequestFullscreen();\n            }\n            else if (container.mozRequestFullScreen) {\n                container.mozRequestFullScreen();\n            }\n            else if (container.msRequestFullscreen) {\n                container.msRequestFullscreen();\n            }\n        }\n        catch (_) {\n        }\n    }, []);\n    const exit = React.useCallback(() => {\n        if (!getFullscreenElement())\n            return;\n        const ownerDocument = getOwnerDocument();\n        try {\n            if (ownerDocument.exitFullscreen) {\n                ownerDocument.exitFullscreen().catch(() => { });\n            }\n            else if (ownerDocument.webkitExitFullscreen) {\n                ownerDocument.webkitExitFullscreen();\n            }\n            else if (ownerDocument.mozCancelFullScreen) {\n                ownerDocument.mozCancelFullScreen();\n            }\n            else if (ownerDocument.msExitFullscreen) {\n                ownerDocument.msExitFullscreen();\n            }\n        }\n        catch (_) {\n        }\n    }, [getFullscreenElement, getOwnerDocument]);\n    React.useEffect(() => {\n        const ownerDocument = getOwnerDocument();\n        const listener = () => {\n            setFullscreen(getFullscreenElement() === containerRef.current);\n        };\n        return cleanup(...[\"fullscreenchange\", \"webkitfullscreenchange\", \"mozfullscreenchange\", \"MSFullscreenChange\"].map((event) => {\n            ownerDocument.addEventListener(event, listener);\n            return () => ownerDocument.removeEventListener(event, listener);\n        }));\n    }, [getFullscreenElement, getOwnerDocument]);\n    const onEnterFullscreen = useEventCallback(() => { var _a; return (_a = on.enterFullscreen) === null || _a === void 0 ? void 0 : _a.call(on); });\n    const onExitFullscreen = useEventCallback(() => { var _a; return (_a = on.exitFullscreen) === null || _a === void 0 ? void 0 : _a.call(on); });\n    React.useEffect(() => {\n        if (fullscreen) {\n            wasFullscreen.current = true;\n        }\n        if (wasFullscreen.current) {\n            (fullscreen ? onEnterFullscreen : onExitFullscreen)();\n        }\n    }, [fullscreen, onEnterFullscreen, onExitFullscreen]);\n    const handleAutoFullscreen = useEventCallback(() => {\n        var _a;\n        (_a = (auto ? enter : null)) === null || _a === void 0 ? void 0 : _a();\n        return exit;\n    });\n    React.useEffect(handleAutoFullscreen, [handleAutoFullscreen]);\n    const context = React.useMemo(() => ({ fullscreen, disabled, enter, exit }), [fullscreen, disabled, enter, exit]);\n    React.useImperativeHandle(ref, () => context, [context]);\n    return (React.createElement(\"div\", { ref: containerRef, className: clsx(cssClass(PLUGIN_FULLSCREEN), cssClass(CLASS_FULLSIZE)) },\n        React.createElement(FullscreenContext.Provider, { value: context }, children)));\n}\n\nconst EnterFullscreenIcon = createIcon(\"EnterFullscreen\", React.createElement(\"path\", { d: \"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\" }));\nconst ExitFullscreenIcon = createIcon(\"ExitFullscreen\", React.createElement(\"path\", { d: \"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z\" }));\nfunction FullscreenButton() {\n    var _a;\n    const { fullscreen, disabled, enter, exit } = useFullscreen();\n    const { render } = useLightboxProps();\n    if (disabled)\n        return null;\n    if (render.buttonFullscreen) {\n        return React.createElement(React.Fragment, null, (_a = render.buttonFullscreen) === null || _a === void 0 ? void 0 : _a.call(render, { fullscreen, disabled, enter, exit }));\n    }\n    return (React.createElement(IconButton, { disabled: disabled, label: fullscreen ? \"Exit Fullscreen\" : \"Enter Fullscreen\", icon: fullscreen ? ExitFullscreenIcon : EnterFullscreenIcon, renderIcon: fullscreen ? render.iconExitFullscreen : render.iconEnterFullscreen, onClick: fullscreen ? exit : enter }));\n}\n\nfunction Fullscreen({ augment, contains, addParent }) {\n    augment(({ fullscreen, toolbar, ...restProps }) => ({\n        toolbar: addToolbarButton(toolbar, PLUGIN_FULLSCREEN, React.createElement(FullscreenButton, null)),\n        fullscreen: resolveFullscreenProps(fullscreen),\n        ...restProps,\n    }));\n    addParent(contains(PLUGIN_THUMBNAILS) ? PLUGIN_THUMBNAILS : MODULE_CONTROLLER, createModule(PLUGIN_FULLSCREEN, FullscreenContextProvider));\n}\n\nexport { Fullscreen as default };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,cAAc,EAAEC,kBAAkB,EAAEC,eAAe,EAAEC,OAAO,EAAEC,gBAAgB,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,gBAAgB,EAAEC,UAAU,EAAEC,gBAAgB,EAAEC,YAAY,QAAQ,gBAAgB;AACzM,SAASC,iBAAiB,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,iBAAiB,QAAQ,gBAAgB;AAExG,MAAMC,sBAAsB,GAAG;EAC3BC,IAAI,EAAE,KAAK;EACXC,GAAG,EAAE;AACT,CAAC;AACD,MAAMC,sBAAsB,GAAIC,UAAU,KAAM;EAC5C,GAAGJ,sBAAsB;EACzB,GAAGI;AACP,CAAC,CAAC;AAEF,MAAMC,iBAAiB,GAAGtB,KAAK,CAACuB,aAAa,CAAC,IAAI,CAAC;AACnD,MAAMC,aAAa,GAAGvB,cAAc,CAAC,eAAe,EAAE,mBAAmB,EAAEqB,iBAAiB,CAAC;AAC7F,SAASG,yBAAyBA,CAAC;EAAEJ,UAAU,EAAEK,eAAe;EAAEC,EAAE;EAAEC;AAAS,CAAC,EAAE;EAC9E,MAAM;IAAEV,IAAI;IAAEC;EAAI,CAAC,GAAGC,sBAAsB,CAACM,eAAe,CAAC;EAC7D,MAAMG,YAAY,GAAG7B,KAAK,CAAC8B,MAAM,CAAC,IAAI,CAAC;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhC,KAAK,CAACiC,QAAQ,CAAC,CAAC;EAChD,MAAM,CAACZ,UAAU,EAAEa,aAAa,CAAC,GAAGlC,KAAK,CAACiC,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAME,aAAa,GAAGnC,KAAK,CAAC8B,MAAM,CAAC,KAAK,CAAC;EACzC,MAAM;IAAEM;EAAiB,CAAC,GAAGlC,kBAAkB,CAAC,CAAC;EACjDC,eAAe,CAAC,MAAM;IAClB,IAAIkC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;IAClB,MAAMC,aAAa,GAAGL,gBAAgB,CAAC,CAAC;IACxCJ,WAAW,CAAC,EAAE,CAACQ,EAAE,GAAG,CAACD,EAAE,GAAG,CAACD,EAAE,GAAG,CAACD,EAAE,GAAGI,aAAa,CAACC,iBAAiB,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGI,aAAa,CAACE,uBAAuB,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGG,aAAa,CAACG,oBAAoB,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGE,aAAa,CAACI,mBAAmB,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,KAAK,CAAC,CAAC;EACpU,CAAC,EAAE,CAACJ,gBAAgB,CAAC,CAAC;EACtB,MAAMU,oBAAoB,GAAG9C,KAAK,CAAC+C,WAAW,CAAC,MAAM;IACjD,IAAIV,EAAE;IACN,MAAMI,aAAa,GAAGL,gBAAgB,CAAC,CAAC;IACxC,MAAMY,iBAAiB,GAAGP,aAAa,CAACO,iBAAiB,IACrDP,aAAa,CAACQ,uBAAuB,IACrCR,aAAa,CAACS,oBAAoB,IAClCT,aAAa,CAACU,mBAAmB;IACrC,OAAO,CAAC,CAACd,EAAE,GAAGW,iBAAiB,KAAK,IAAI,IAAIA,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACI,UAAU,MAAM,IAAI,IAAIf,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACW,iBAAiB,KAAKA,iBAAiB;EACrM,CAAC,EAAE,CAACZ,gBAAgB,CAAC,CAAC;EACtB,MAAMiB,KAAK,GAAGrD,KAAK,CAAC+C,WAAW,CAAC,MAAM;IAClC,MAAMO,SAAS,GAAGzB,YAAY,CAAC0B,OAAO;IACtC,IAAI;MACA,IAAID,SAAS,CAACE,iBAAiB,EAAE;QAC7BF,SAAS,CAACE,iBAAiB,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,CAAE,CAAC,CAAC;MAClD,CAAC,MACI,IAAIH,SAAS,CAACI,uBAAuB,EAAE;QACxCJ,SAAS,CAACI,uBAAuB,CAAC,CAAC;MACvC,CAAC,MACI,IAAIJ,SAAS,CAACK,oBAAoB,EAAE;QACrCL,SAAS,CAACK,oBAAoB,CAAC,CAAC;MACpC,CAAC,MACI,IAAIL,SAAS,CAACM,mBAAmB,EAAE;QACpCN,SAAS,CAACM,mBAAmB,CAAC,CAAC;MACnC;IACJ,CAAC,CACD,OAAOC,CAAC,EAAE,CACV;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,IAAI,GAAG9D,KAAK,CAAC+C,WAAW,CAAC,MAAM;IACjC,IAAI,CAACD,oBAAoB,CAAC,CAAC,EACvB;IACJ,MAAML,aAAa,GAAGL,gBAAgB,CAAC,CAAC;IACxC,IAAI;MACA,IAAIK,aAAa,CAACsB,cAAc,EAAE;QAC9BtB,aAAa,CAACsB,cAAc,CAAC,CAAC,CAACN,KAAK,CAAC,MAAM,CAAE,CAAC,CAAC;MACnD,CAAC,MACI,IAAIhB,aAAa,CAACuB,oBAAoB,EAAE;QACzCvB,aAAa,CAACuB,oBAAoB,CAAC,CAAC;MACxC,CAAC,MACI,IAAIvB,aAAa,CAACwB,mBAAmB,EAAE;QACxCxB,aAAa,CAACwB,mBAAmB,CAAC,CAAC;MACvC,CAAC,MACI,IAAIxB,aAAa,CAACyB,gBAAgB,EAAE;QACrCzB,aAAa,CAACyB,gBAAgB,CAAC,CAAC;MACpC;IACJ,CAAC,CACD,OAAOL,CAAC,EAAE,CACV;EACJ,CAAC,EAAE,CAACf,oBAAoB,EAAEV,gBAAgB,CAAC,CAAC;EAC5CpC,KAAK,CAACmE,SAAS,CAAC,MAAM;IAClB,MAAM1B,aAAa,GAAGL,gBAAgB,CAAC,CAAC;IACxC,MAAMgC,QAAQ,GAAGA,CAAA,KAAM;MACnBlC,aAAa,CAACY,oBAAoB,CAAC,CAAC,KAAKjB,YAAY,CAAC0B,OAAO,CAAC;IAClE,CAAC;IACD,OAAOnD,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,wBAAwB,EAAE,qBAAqB,EAAE,oBAAoB,CAAC,CAACiE,GAAG,CAAEC,KAAK,IAAK;MACzH7B,aAAa,CAAC8B,gBAAgB,CAACD,KAAK,EAAEF,QAAQ,CAAC;MAC/C,OAAO,MAAM3B,aAAa,CAAC+B,mBAAmB,CAACF,KAAK,EAAEF,QAAQ,CAAC;IACnE,CAAC,CAAC,CAAC;EACP,CAAC,EAAE,CAACtB,oBAAoB,EAAEV,gBAAgB,CAAC,CAAC;EAC5C,MAAMqC,iBAAiB,GAAGpE,gBAAgB,CAAC,MAAM;IAAE,IAAIgC,EAAE;IAAE,OAAO,CAACA,EAAE,GAAGV,EAAE,CAAC+C,eAAe,MAAM,IAAI,IAAIrC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACsC,IAAI,CAAChD,EAAE,CAAC;EAAE,CAAC,CAAC;EAChJ,MAAMiD,gBAAgB,GAAGvE,gBAAgB,CAAC,MAAM;IAAE,IAAIgC,EAAE;IAAE,OAAO,CAACA,EAAE,GAAGV,EAAE,CAACoC,cAAc,MAAM,IAAI,IAAI1B,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACsC,IAAI,CAAChD,EAAE,CAAC;EAAE,CAAC,CAAC;EAC9I3B,KAAK,CAACmE,SAAS,CAAC,MAAM;IAClB,IAAI9C,UAAU,EAAE;MACZc,aAAa,CAACoB,OAAO,GAAG,IAAI;IAChC;IACA,IAAIpB,aAAa,CAACoB,OAAO,EAAE;MACvB,CAAClC,UAAU,GAAGoD,iBAAiB,GAAGG,gBAAgB,EAAE,CAAC;IACzD;EACJ,CAAC,EAAE,CAACvD,UAAU,EAAEoD,iBAAiB,EAAEG,gBAAgB,CAAC,CAAC;EACrD,MAAMC,oBAAoB,GAAGxE,gBAAgB,CAAC,MAAM;IAChD,IAAIgC,EAAE;IACN,CAACA,EAAE,GAAInB,IAAI,GAAGmC,KAAK,GAAG,IAAK,MAAM,IAAI,IAAIhB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC,CAAC;IACtE,OAAOyB,IAAI;EACf,CAAC,CAAC;EACF9D,KAAK,CAACmE,SAAS,CAACU,oBAAoB,EAAE,CAACA,oBAAoB,CAAC,CAAC;EAC7D,MAAMC,OAAO,GAAG9E,KAAK,CAAC+E,OAAO,CAAC,OAAO;IAAE1D,UAAU;IAAEU,QAAQ;IAAEsB,KAAK;IAAES;EAAK,CAAC,CAAC,EAAE,CAACzC,UAAU,EAAEU,QAAQ,EAAEsB,KAAK,EAAES,IAAI,CAAC,CAAC;EACjH9D,KAAK,CAACgF,mBAAmB,CAAC7D,GAAG,EAAE,MAAM2D,OAAO,EAAE,CAACA,OAAO,CAAC,CAAC;EACxD,OAAQ9E,KAAK,CAACiF,aAAa,CAAC,KAAK,EAAE;IAAE9D,GAAG,EAAEU,YAAY;IAAEqD,SAAS,EAAE5E,IAAI,CAACC,QAAQ,CAACM,iBAAiB,CAAC,EAAEN,QAAQ,CAACO,cAAc,CAAC;EAAE,CAAC,EAC5Hd,KAAK,CAACiF,aAAa,CAAC3D,iBAAiB,CAAC6D,QAAQ,EAAE;IAAEC,KAAK,EAAEN;EAAQ,CAAC,EAAElD,QAAQ,CAAC,CAAC;AACtF;AAEA,MAAMyD,mBAAmB,GAAG7E,UAAU,CAAC,iBAAiB,EAAER,KAAK,CAACiF,aAAa,CAAC,MAAM,EAAE;EAAEK,CAAC,EAAE;AAAiF,CAAC,CAAC,CAAC;AAC/K,MAAMC,kBAAkB,GAAG/E,UAAU,CAAC,gBAAgB,EAAER,KAAK,CAACiF,aAAa,CAAC,MAAM,EAAE;EAAEK,CAAC,EAAE;AAAgF,CAAC,CAAC,CAAC;AAC5K,SAASE,gBAAgBA,CAAA,EAAG;EACxB,IAAInD,EAAE;EACN,MAAM;IAAEhB,UAAU;IAAEU,QAAQ;IAAEsB,KAAK;IAAES;EAAK,CAAC,GAAGtC,aAAa,CAAC,CAAC;EAC7D,MAAM;IAAEiE;EAAO,CAAC,GAAGhF,gBAAgB,CAAC,CAAC;EACrC,IAAIsB,QAAQ,EACR,OAAO,IAAI;EACf,IAAI0D,MAAM,CAACC,gBAAgB,EAAE;IACzB,OAAO1F,KAAK,CAACiF,aAAa,CAACjF,KAAK,CAAC2F,QAAQ,EAAE,IAAI,EAAE,CAACtD,EAAE,GAAGoD,MAAM,CAACC,gBAAgB,MAAM,IAAI,IAAIrD,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACsC,IAAI,CAACc,MAAM,EAAE;MAAEpE,UAAU;MAAEU,QAAQ;MAAEsB,KAAK;MAAES;IAAK,CAAC,CAAC,CAAC;EAChL;EACA,OAAQ9D,KAAK,CAACiF,aAAa,CAACvE,UAAU,EAAE;IAAEqB,QAAQ,EAAEA,QAAQ;IAAE6D,KAAK,EAAEvE,UAAU,GAAG,iBAAiB,GAAG,kBAAkB;IAAEwE,IAAI,EAAExE,UAAU,GAAGkE,kBAAkB,GAAGF,mBAAmB;IAAES,UAAU,EAAEzE,UAAU,GAAGoE,MAAM,CAACM,kBAAkB,GAAGN,MAAM,CAACO,mBAAmB;IAAEC,OAAO,EAAE5E,UAAU,GAAGyC,IAAI,GAAGT;EAAM,CAAC,CAAC;AACjT;AAEA,SAAS6C,UAAUA,CAAC;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAU,CAAC,EAAE;EAClDF,OAAO,CAAC,CAAC;IAAE9E,UAAU;IAAEiF,OAAO;IAAE,GAAGC;EAAU,CAAC,MAAM;IAChDD,OAAO,EAAE3F,gBAAgB,CAAC2F,OAAO,EAAEzF,iBAAiB,EAAEb,KAAK,CAACiF,aAAa,CAACO,gBAAgB,EAAE,IAAI,CAAC,CAAC;IAClGnE,UAAU,EAAED,sBAAsB,CAACC,UAAU,CAAC;IAC9C,GAAGkF;EACP,CAAC,CAAC,CAAC;EACHF,SAAS,CAACD,QAAQ,CAACrF,iBAAiB,CAAC,GAAGA,iBAAiB,GAAGC,iBAAiB,EAAEJ,YAAY,CAACC,iBAAiB,EAAEY,yBAAyB,CAAC,CAAC;AAC9I;AAEA,SAASyE,UAAU,IAAIM,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}